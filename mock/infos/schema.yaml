


components:
  definitions:
    User:
      type: "object"
      required:
        - "title"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        company:
          type: "string"
        summary:
          type: "string"
        condition:
          type: "string"
        content:
          type: "string"
        address:
          type: "string"
        other:
          type: "string"
        status:
          type: "string"
          description: "user status"
          enum:
            - "pending"
            - "active"
            - "inactive"
  schemas:
    User:
      type: "object"
      required:
        - "name"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 101
        name:
          type: "string"
          example: "Tyro"
        status:
          type: "string"
          description: "user status"
          enum:
            - "pending"
            - "active"
            - "inactive"
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"